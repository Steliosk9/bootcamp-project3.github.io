{"ast":null,"code":"var _jsxFileName = \"/Users/anhthule/Desktop/bootcamp-project3.github.io-thule/client/src/components/SearchBar/SearchBar.js\";\nimport React from 'react';\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\nimport Autosuggest from 'react-autosuggest';\nimport './style.css';\nconst subscription = [{\n  //   first: 'Charlie',\n  //   last: 'Brown',\n  //   twitter: 'dancounsell'\n  // },\n  // {\n  //   first: 'Charlotte',\n  //   last: 'White',\n  //   twitter: 'mtnmissy'\n  // },\n  // {\n  //   first: 'Chloe',\n  //   last: 'Jones',\n  //   twitter: 'ladylexy'\n  // },\n  // {\n  //   first: 'Cooper',\n  //   last: 'King',\n  //   twitter: 'steveodom'\n  // },\n  // {\n  // name:\"Netflix\",\n  // last:\" \",\n  \"name\": \"netflix\",\n  \"renewal date\": \"\",\n  \"amount\": \"\",\n  \"image\": \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",\n  \"url\": \"https://www.netflix.com/Login?nextpage=https%3A%2F%2Fwww.netflix.com%2FYourAccount\"\n}, {\n  \"name\": \"hulu\",\n  \"renewal date\": \"\",\n  \"amount\": \"\",\n  \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Hulu_Logo.svg\",\n  \"url\": \"https://auth.hulu.com/web/login\"\n}, {\n  \"name\": \"amazon prime \",\n  \"renewal date\": \"\",\n  \"amount\": \"\",\n  \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e3/Amazon_Prime_Logo.svg\",\n  \"url\": \"https://www.amazon.com/your-account\"\n}, {\n  \"name\": \"hbo now\",\n  \"renewal date\": \"\",\n  \"amount\": \"\",\n  \"image\": \"https://upload.wikimedia.org/wikipedia/commons/b/b2/HBONOW-logo.svg\",\n  \"url\": \"https://play.hbonow.com/page/urn:hbo:page:home\"\n}, {\n  \"name\": \"sling tv\",\n  \"renewal date\": \"\",\n  \"amount\": \"\",\n  \"image\": \"https://upload.wikimedia.org/wikipedia/commons/5/53/Sling_TV_logo.svg\",\n  \"url\": \"https://oauth-client.p.sling.com/?redirect_uri=https://www.sling.com/authentication_callback&client_id=ott_server&state=eqfk0\"\n}, {\n  \"name\": \"disney +\",\n  \"renewal date\": \"\",\n  \"amount\": \"\",\n  \"image\": \"https://upload.wikimedia.org/wikipedia/commons/3/3e/Disney%2B_logo.svg\",\n  \"url\": \"https://preview.disneyplus.com\"\n}]; // https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === '') {\n    return [];\n  }\n\n  const regex = new RegExp('\\\\b' + escapedValue, 'i');\n  return subscription.filter(person => regex.test(getSuggestionValue(person)));\n}\n\nfunction getSuggestionValue(suggestion) {\n  return \"\".concat(suggestion.name);\n}\n\nfunction renderSuggestion(suggestion, {\n  query\n}) {\n  const suggestionText = \"\".concat(suggestion.name);\n  const matches = AutosuggestHighlightMatch(suggestionText, query);\n  const parts = AutosuggestHighlightParse(suggestionText, matches);\n  return React.createElement(\"span\", {\n    className: 'suggestion-content ' + suggestion.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, parts.map((part, index) => {\n    const className = part.highlight ? 'highlight' : null;\n    return React.createElement(\"span\", {\n      className: className,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, part.text);\n  })));\n}\n\nclass SearchBar extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = (event, {\n      newValue,\n      method\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n    const inputProps = {\n      placeholder: \"Type 'c'\",\n      value,\n      onChange: this.onChange\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/anhthule/Desktop/bootcamp-project3.github.io-thule/client/src/components/SearchBar/SearchBar.js"],"names":["React","AutosuggestHighlightMatch","AutosuggestHighlightParse","Autosuggest","subscription","escapeRegexCharacters","str","replace","getSuggestions","value","escapedValue","trim","regex","RegExp","filter","person","test","getSuggestionValue","suggestion","name","renderSuggestion","query","suggestionText","matches","parts","image","map","part","index","className","highlight","text","SearchBar","Component","constructor","onChange","event","newValue","method","setState","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","state","render","inputProps","placeholder"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\nimport Autosuggest from 'react-autosuggest';\nimport './style.css'\nconst subscription = [\n    {\n    //   first: 'Charlie',\n    //   last: 'Brown',\n    //   twitter: 'dancounsell'\n    // },\n    // {\n    //   first: 'Charlotte',\n    //   last: 'White',\n    //   twitter: 'mtnmissy'\n    // },\n    // {\n    //   first: 'Chloe',\n    //   last: 'Jones',\n    //   twitter: 'ladylexy'\n    // },\n    // {\n    //   first: 'Cooper',\n    //   last: 'King',\n    //   twitter: 'steveodom'\n    // },\n    // {\n        // name:\"Netflix\",\n        // last:\" \",\n\n         \n            \"name\": \"netflix\",\n            \"renewal date\": \"\",\n            \"amount\": \"\",\n            \"image\": \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",\n            \"url\": \"https://www.netflix.com/Login?nextpage=https%3A%2F%2Fwww.netflix.com%2FYourAccount\"\n            },\n       {\n            \"name\": \"hulu\",\n            \"renewal date\": \"\",\n            \"amount\": \"\",\n            \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Hulu_Logo.svg\",\n            \"url\": \"https://auth.hulu.com/web/login\"\n            },\n       {\n            \"name\": \"amazon prime \",\n            \"renewal date\": \"\",\n            \"amount\": \"\",\n            \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e3/Amazon_Prime_Logo.svg\",\n            \"url\": \"https://www.amazon.com/your-account\"\n            },\n      {\n            \"name\": \"hbo now\",\n            \"renewal date\": \"\",\n            \"amount\": \"\",\n            \"image\": \"https://upload.wikimedia.org/wikipedia/commons/b/b2/HBONOW-logo.svg\",\n            \"url\":\"https://play.hbonow.com/page/urn:hbo:page:home\"\n            },\n        {\n            \"name\": \"sling tv\",\n            \"renewal date\": \"\",\n            \"amount\": \"\",\n            \"image\": \"https://upload.wikimedia.org/wikipedia/commons/5/53/Sling_TV_logo.svg\",\n            \"url\": \"https://oauth-client.p.sling.com/?redirect_uri=https://www.sling.com/authentication_callback&client_id=ott_server&state=eqfk0\"\n\n            },\n       {\n            \"name\": \"disney +\",\n            \"renewal date\": \"\",\n            \"amount\": \"\",\n            \"image\": \"https://upload.wikimedia.org/wikipedia/commons/3/3e/Disney%2B_logo.svg\",\n            \"url\": \"https://preview.disneyplus.com\"\n\n            },\n        \n    \n  ];\n  \n  // https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\n  function escapeRegexCharacters(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  }\n  \n  function getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n    \n    if (escapedValue === '') {\n      return [];\n    }\n  \n    const regex = new RegExp('\\\\b' + escapedValue, 'i');\n    \n    return subscription.filter(person => regex.test(getSuggestionValue(person)));\n  }\n  \n  function getSuggestionValue(suggestion) {\n    return `${suggestion.name}`;\n  }\n  \n  function renderSuggestion(suggestion, { query }) {\n    const suggestionText = `${suggestion.name}`;\n    const matches = AutosuggestHighlightMatch(suggestionText, query);\n    const parts = AutosuggestHighlightParse(suggestionText, matches);\n  \n    return (\n      <span className={'suggestion-content ' + suggestion.image}>\n        <span className=\"name\">\n          {\n            parts.map((part, index) => {\n              const className = part.highlight ? 'highlight' : null;\n  \n              return (\n                <span className={className} key={index}>{part.text}</span>\n              );\n            })\n          }\n        </span>\n      </span>\n    );\n  }\n  \n  class SearchBar extends React.Component {\n    constructor() {\n      super();\n  \n      this.state = {\n        value: '',\n        suggestions: []\n      };    \n    }\n  \n    onChange = (event, { newValue, method }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n    \n    onSuggestionsFetchRequested = ({ value }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n  \n    onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n  \n    render() {\n      const { value, suggestions } = this.state;\n      const inputProps = {\n        placeholder: \"Type 'c'\",\n        value,\n        onChange: this.onChange\n      };\n  \n      return (\n          <div>\n          \n        <Autosuggest \n          suggestions={suggestions}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          getSuggestionValue={getSuggestionValue}\n          renderSuggestion={renderSuggestion}\n          inputProps={inputProps} />\n          </div>\n      );\n    }\n  }\n  \n  export default SearchBar;\n  "]},"metadata":{},"sourceType":"module"}