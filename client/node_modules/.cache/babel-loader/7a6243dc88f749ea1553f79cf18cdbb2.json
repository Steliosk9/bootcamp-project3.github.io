{"ast":null,"code":"var _jsxFileName = \"/Users/anhthule/Desktop/bootcamp-project3.github.io/client/src/components/CreateSub/CreateSub.js\";\nimport React, { Component } from 'react';\nimport Wrapper from '../SubCards/Wrapper';\nimport API from '../../utilities/API';\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\nimport Autosuggest from 'react-autosuggest';\nimport './style.css';\nimport SearchBar from \"../SearchBar/SearchBar\";\nconst subscription = [{\n  \"name\": \"netflix\",\n  \"renewal date\": \"\",\n  \"amount\": \"\",\n  \"image\": \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",\n  \"url\": \"https://www.netflix.com/Login?nextpage=https%3A%2F%2Fwww.netflix.com%2FYourAccount\"\n}, {\n  \"name\": \"hulu\",\n  \"renewal date\": \"\",\n  \"amount\": \"\",\n  \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Hulu_Logo.svg\",\n  \"url\": \"https://auth.hulu.com/web/login\"\n}, {\n  \"name\": \"amazon prime \",\n  \"renewal date\": \"\",\n  \"amount\": \"\",\n  \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e3/Amazon_Prime_Logo.svg\",\n  \"url\": \"https://www.amazon.com/your-account\"\n}, {\n  \"name\": \"hbo now\",\n  \"renewal date\": \"\",\n  \"amount\": \"\",\n  \"image\": \"https://upload.wikimedia.org/wikipedia/commons/b/b2/HBONOW-logo.svg\",\n  \"url\": \"https://play.hbonow.com/page/urn:hbo:page:home\"\n}, {\n  \"name\": \"sling tv\",\n  \"renewal date\": \"\",\n  \"amount\": \"\",\n  \"image\": \"https://upload.wikimedia.org/wikipedia/commons/5/53/Sling_TV_logo.svg\",\n  \"url\": \"https://oauth-client.p.sling.com/?redirect_uri=https://www.sling.com/authentication_callback&client_id=ott_server&state=eqfk0\"\n}, {\n  \"name\": \"disney +\",\n  \"renewal date\": \"\",\n  \"amount\": \"\",\n  \"image\": \"https://upload.wikimedia.org/wikipedia/commons/3/3e/Disney%2B_logo.svg\",\n  \"url\": \"https://preview.disneyplus.com\"\n}]; // https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === '') {\n    return [];\n  }\n\n  const regex = new RegExp('\\\\b' + escapedValue, 'i');\n  return subscription.filter(person => regex.test(getSuggestionValue(person)));\n}\n\nfunction getSuggestionValue(suggestion) {\n  return \"\".concat(suggestion.name);\n}\n\nfunction renderSuggestion(suggestion, {\n  query\n}) {\n  const suggestionText = \"\".concat(suggestion.name);\n  const matches = AutosuggestHighlightMatch(suggestionText, query);\n  const parts = AutosuggestHighlightParse(suggestionText, matches);\n  return React.createElement(\"span\", {\n    className: 'suggestion-content ' + suggestion.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, parts.map((part, index) => {\n    const className = part.highlight ? 'highlight' : null;\n    return React.createElement(\"span\", {\n      className: className,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, part.text);\n  })));\n}\n\nclass CreateSub extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onChange = (event, {\n      newValue,\n      method\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.handleSubscriptionEntry = event => {\n      // event.preventDefault();\n      console.log(\"handleSubscriptionEntry\");\n      API.saveSubscription({\n        name: this.state.value,\n        amount: this.state.amount,\n        subURL: this.state.subURL,\n        date: this.state.date,\n        username: this.state.username\n      }).then(res => this.loadSubs()).catch(err => console.log(err));\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      username: props.username,\n      value: \"\",\n      date: \"\",\n      amount: \"\",\n      subURL: \"\",\n      suggestions: []\n    };\n  }\n\n  render() {\n    const value = this.state.value;\n    const suggestions = this.state.suggestions;\n    const inputProps = {\n      placeholder: \"Subscription name\",\n      value,\n      onChange: this.onChange\n    };\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"line1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Subscription URL: \"), React.createElement(\"input\", {\n      type: \"text\",\n      size: \"50\",\n      name: \"subURL\",\n      placeholder: \"Paste URL here\",\n      onChange: this.handleInputChange,\n      value: this.state.subURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"line1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Renewal Date:\"), React.createElement(\"input\", {\n      type: \"date\",\n      size: \"50\",\n      name: \"date\",\n      onChange: this.handleInputChange,\n      value: this.state.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"line1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Amount:\"), React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"$\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"amount\",\n      onChange: this.handleInputChange,\n      value: this.state.amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"line2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"monthly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Monthly\"), React.createElement(\"option\", {\n      value: \"annualy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Annualy\")))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.handleSubscriptionEntry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CreateSub;","map":{"version":3,"sources":["/Users/anhthule/Desktop/bootcamp-project3.github.io/client/src/components/CreateSub/CreateSub.js"],"names":["React","Component","Wrapper","API","AutosuggestHighlightMatch","AutosuggestHighlightParse","Autosuggest","SearchBar","subscription","escapeRegexCharacters","str","replace","getSuggestions","value","escapedValue","trim","regex","RegExp","filter","person","test","getSuggestionValue","suggestion","name","renderSuggestion","query","suggestionText","matches","parts","image","map","part","index","className","highlight","text","CreateSub","constructor","props","handleInputChange","event","target","setState","onChange","newValue","method","handleSubscriptionEntry","console","log","saveSubscription","state","amount","subURL","date","username","then","res","loadSubs","catch","err","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","render","inputProps","placeholder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Wrapper from '../SubCards/Wrapper';\nimport API from '../../utilities/API'\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\nimport Autosuggest from 'react-autosuggest';\nimport './style.css'\nimport SearchBar from \"../SearchBar/SearchBar\"\n\nconst subscription = [\n    {\n        \"name\": \"netflix\",\n        \"renewal date\": \"\",\n        \"amount\": \"\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",\n        \"url\": \"https://www.netflix.com/Login?nextpage=https%3A%2F%2Fwww.netflix.com%2FYourAccount\"\n    },\n    {\n        \"name\": \"hulu\",\n        \"renewal date\": \"\",\n        \"amount\": \"\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Hulu_Logo.svg\",\n        \"url\": \"https://auth.hulu.com/web/login\"\n    },\n    {\n        \"name\": \"amazon prime \",\n        \"renewal date\": \"\",\n        \"amount\": \"\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e3/Amazon_Prime_Logo.svg\",\n        \"url\": \"https://www.amazon.com/your-account\"\n    },\n    {\n        \"name\": \"hbo now\",\n        \"renewal date\": \"\",\n        \"amount\": \"\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/b/b2/HBONOW-logo.svg\",\n        \"url\": \"https://play.hbonow.com/page/urn:hbo:page:home\"\n    },\n    {\n        \"name\": \"sling tv\",\n        \"renewal date\": \"\",\n        \"amount\": \"\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/5/53/Sling_TV_logo.svg\",\n        \"url\": \"https://oauth-client.p.sling.com/?redirect_uri=https://www.sling.com/authentication_callback&client_id=ott_server&state=eqfk0\"\n    },\n    {\n        \"name\": \"disney +\",\n        \"renewal date\": \"\",\n        \"amount\": \"\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/3/3e/Disney%2B_logo.svg\",\n        \"url\": \"https://preview.disneyplus.com\"\n    },\n];\n\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\nfunction escapeRegexCharacters(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n        return [];\n    }\n\n    const regex = new RegExp('\\\\b' + escapedValue, 'i');\n\n    return subscription.filter(person => regex.test(getSuggestionValue(person)));\n}\n\nfunction getSuggestionValue(suggestion) {\n    return `${suggestion.name}`;\n}\n\nfunction renderSuggestion(suggestion, { query }) {\n    const suggestionText = `${suggestion.name}`;\n    const matches = AutosuggestHighlightMatch(suggestionText, query);\n    const parts = AutosuggestHighlightParse(suggestionText, matches);\n\n    return (\n        <span className={'suggestion-content ' + suggestion.image}>\n            <span className=\"name\">\n                {\n                    parts.map((part, index) => {\n                        const className = part.highlight ? 'highlight' : null;\n\n                        return (\n                            <span className={className} key={index}>{part.text}</span>\n                        );\n                    })\n                }\n            </span>\n        </span>\n    );\n}\n\nclass CreateSub extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: props.username,\n            value: \"\",\n            date: \"\",\n            amount: \"\",\n            subURL: \"\",\n            suggestions: []\n        }\n    }\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value })\n    }\n\n    onChange = (event, { newValue, method }) => {\n        this.setState({\n          value: newValue\n        });\n      };\n  \n    handleSubscriptionEntry = (event) => {\n        // event.preventDefault();\n        console.log(\"handleSubscriptionEntry\")\n        API.saveSubscription({\n            name: this.state.value,\n            amount: this.state.amount,\n            subURL: this.state.subURL,\n            date: this.state.date,\n            username: this.state.username\n        })\n            .then(res => this.loadSubs())\n            .catch(err => console.log(err));\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: getSuggestions(value)\n        });\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    render() {\n        const value = this.state.value\n        const suggestions = this.state.suggestions\n        const inputProps = {\n            placeholder: \"Subscription name\",\n            value,\n            onChange: this.onChange\n        };\n\n        return (\n            <div className=\"container\">\n                <Wrapper>\n                    <div>\n                        <div className=\"search-bar\">\n                            <div>\n                                <Autosuggest\n                                    suggestions={suggestions}\n                                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                                    getSuggestionValue={getSuggestionValue}\n                                    renderSuggestion={renderSuggestion}\n                                    inputProps={inputProps} />\n                            </div>\n                        </div>\n                        <div className=\"line1\">\n                            <p>Subscription URL: </p><input type=\"text\" size=\"50\" name=\"subURL\"\n                                placeholder=\"Paste URL here\" onChange={this.handleInputChange} value={this.state.subURL} />\n                        </div>\n                        <div className=\"line1\">\n                            <p>Renewal Date:</p>\n                            <input type=\"date\" size=\"50\" name=\"date\" onChange={this.handleInputChange} value={this.state.date} />\n                        </div>\n                        <div className=\"line1\">\n                            <p>Amount:</p>\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">$</span>\n                                <input type=\"number\" name=\"amount\" onChange={this.handleInputChange} value={this.state.amount}></input>\n                                <div className=\"line2\">\n                                    <select name=\"\">\n                                        <option value=\"monthly\">Monthly</option>\n                                        <option value=\"annualy\">Annualy</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"submit\" onClick={this.handleSubscriptionEntry} />\n                    </div>\n                </Wrapper>\n            </div >\n        )\n    }\n}\n\nexport default CreateSub;\n\n"]},"metadata":{},"sourceType":"module"}