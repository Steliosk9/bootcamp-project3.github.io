{"version":3,"sources":["components/Navbar/Navbar.js","components/Main/Main.js","components/CreateAccount/CreateAccount.js","components/Login/Login.js","components/Dashboard/Dashboard.js","components/ExpenseEntry/ExpenseEntry.js","components/Subscriptions/Subscriptions.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","window","location","pathname","Main","props","CreateAccount","type","placeholder","value","Login","href","dashboard","expenseEntry","subscriptions","App","state","username","password","exact","path","component","Dashboard","ExpenseEntry","Subscriptions","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22cf75cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './style.css';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\"\r\n                            className={\r\n                                window.location.pathname === \"/\" || window.location.pathname === \"/dashboard\"\r\n                                    ? \"nav-link active\" : \"nav-link\"\r\n                            }\r\n                        >\r\n                            Dashboard\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/expenseEntry\"\r\n                            className={window.location.pathname === \"/expenseEntry\" ? \"nav-link active\" : \"nav-link\"}\r\n                        >\r\n                            Expense Entry\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/subscriptions\"\r\n                            className={window.location.pathname === \"/subscriptions\" ? \"nav-link active\" : \"nav-link\"}\r\n                        >\r\n                            Subscriptions\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/saved\"\r\n                            className=\"nav-link\"\r\n                        >\r\n                            Logout\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './style.css';\r\n\r\nfunction Main(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"link-wrapper\">\r\n                <div className=\"landing-link\"><Link to=\"/login\">Login</Link></div>\r\n                <div className=\"landing-link\"><Link to=\"/create\">Create Account</Link></div>\r\n            </div>\r\n            <div className=\"landing-intro\">\r\n                <p>Do you know where your money goes? What do you spend more on, groceries or cable TV? Does your phone cost you more than your electricity? Let us help you find out. We can help you keep track of your spending so you can create a budget and better control your finances.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './style.css';\r\n\r\nfunction CreateAccount() {\r\n    return (\r\n        <div>\r\n            <form className=\"create\">\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter Valid Email Address\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Create Username\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Create Password\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" className=\"btnSubmit\" value=\"Create Account\" />\r\n                    <div className=\"to-login\"><Link to=\"/login\">Already Have Account?</Link></div>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateAccount;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './style.css';\r\n\r\nfunction Login(props) {\r\n    return (\r\n        <form className=\"login\">\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Username\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"password\" className=\"form-control\" placeholder=\"Password\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <a href=\"#\" className=\"ForgetPwd\">Forget Password?</a>\r\n                <div className=\"to-login\"><Link to=\"/create\">Create Account Here</Link></div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nfunction dashboard() {\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nexport default dashboard;","import React from 'react';\r\n\r\nfunction expenseEntry() {\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nexport default expenseEntry;","import React from 'react';\r\n\r\nfunction subscriptions() {\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nexport default subscriptions;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from '../src/components/Navbar/Navbar'\nimport Main from './components/Main/Main'\nimport CreateAccount from './components/CreateAccount/CreateAccount'\nimport Login from './components/Login/Login'\nimport Dashboard from './components/Dashboard/Dashboard'\nimport ExpenseEntry from './components/ExpenseEntry/ExpenseEntry'\nimport Subscriptions from './components/Subscriptions/Subscriptions'\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n  }\n  \n  render() {\n    return (\n      <div className=\"container\">\n          <Router>\n        <Navbar />\n        <div className=\"jumbotron\"><h1>Put catchy name here</h1></div>\n      <div>\n        <Switch >\n          <Route exact path=\"/\" component={Main} />\n          <Route exact path=\"/main\" component={Main} />\n          <Route exact path=\"/create\" component={CreateAccount} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/expenseEntry\" component={ExpenseEntry} />\n          <Route exact path=\"/subscriptions\" component={Subscriptions} />\n        </Switch>\n      </div>\n    </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}